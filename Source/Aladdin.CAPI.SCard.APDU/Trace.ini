###############################################################################
# Определение типов 
###############################################################################
DEFINE_CPLX_TYPE(PKCS11, WPP_LOG_NAME, const pkcs11_error_code&, ItemString, "s", pkcs11,  0);

###############################################################################
# Трассировка ошибок Windows 
###############################################################################
FUNC AE_CHECK_WINERROR{TRACELEVEL=TRACE_LEVEL_ERROR}(WINERROR);
USESUFFIX(AE_CHECK_WINERROR, "ERROR WIN32: %!WINERROR!", WPP_VAR(__LINE__));

###############################################################################
# Трассировка ошибок WinAPI
###############################################################################
FUNC AE_CHECK_WINAPI{TRACELEVEL=TRACE_LEVEL_ERROR}(WINAPI);
USESUFFIX(AE_CHECK_WINAPI, "ERROR WIN32: %!WINERROR!", WPP_VAR(__LINE__));

###############################################################################
# Трассировка ошибок PKCS11
###############################################################################
FUNC AE_CHECK_PKCS11{TRACELEVEL=TRACE_LEVEL_ERROR}(PKCS11);
USESUFFIX(AE_CHECK_PKCS11, "ERROR PKCS11: %!PKCS11!", WPP_VAR(__LINE__));

